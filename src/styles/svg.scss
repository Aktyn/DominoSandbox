<<<<<<< HEAD
<<<<<<< HEAD
svg.game-svg {
	.cartoon-style {
		stroke: #000;
		stroke-width: 2px;
		stroke-opacity: 0.5;
=======
$solid_colors: (
	(transparent, #fff1),//sensors preview
=======
$solid_colors: (
	(sensor, #fff1),//sensors preview
>>>>>>> origin/stage3
	(red, #e57373),
	(green, #8BC34A),
	(cannon_bullet, #263238),
	(door1, #8BC34A),//same color as key1
	(orange, #D17400),
	(orange_transparent, #D1740040)
);

$textures: (
<<<<<<< HEAD
=======
	player: (
		'player_texture',
		'./../img/textures/player.png',
		#749de2
	),
>>>>>>> origin/stage3
	crate: (
		'crate_texture',
		'./../img/textures/crate.jpg',
		#292b3d
	),
	exit: (
		'exit_texture',
		'./../img/textures/exit.png',
		#99ca61
	),
	enemy: (
		'enemy_texture',
		'./../img/textures/enemy.png',
		#d7c9c4
	),
	aid: (
		'aid_texture',
		'./../img/textures/aid.png',
		#7dd293
	),
	sawblade: (
		'sawblade_texture',
		'./../img/textures/sawblade.png',
		#e46d53
	),
	forcefield: (
		'forcefield_texture',
		'./../img/textures/forcefield.png',
		#80DEEA80
	),
	portal1: (
		'portal1_texture',
		'./../img/textures/portal1.png',
		#f8c77a
	),
	portal2: (
		'portal2_texture',
		'./../img/textures/portal2.png',
		#f07ae6
	),
	portal3: (
		'portal3_texture',
		'./../img/textures/portal3.png',
		#87cd98
	),
<<<<<<< HEAD
=======
	revolving_door: (
		'revolving_door_texture',
		'./../img/textures/revolving_door.png',
		#8bc34a
	),
>>>>>>> origin/stage3
	spiky_crate: (
		'spiky_crate_texture',
		'./../img/textures/spiky_crate.png',
		#e46d53
	),
	cannon: (
		'cannon_texture',
		'./../img/textures/cannon.png',
		#d67458
	),
	lava: (
		'lava_texture',
		'./../img/textures/lava.jpg',
		#41281e
	),
<<<<<<< HEAD
=======
	ice: (
		'ice_texture',
		'./../img/textures/ice.jpg',
		#86b2e2
	),
>>>>>>> origin/stage3
	grass: (
		'grass_texture',
		'./../img/textures/grass.jpg',
		#70992c
	),
<<<<<<< HEAD
=======
	bricks: (
		'bricks_texture',
		'./../img/textures/bricks.jpg',
		#af4b2a
	),
>>>>>>> origin/stage3
	key1: (
		'key1_texture',
		'./../img/textures/key1.png',
		#8BC34A
	),
	elevator: (
		'elevator_texture',
		'./../img/textures/elevator.png',
		#D1740080
	),
	elevator_up: (
		'elevator_texture_up',
		'./../img/textures/elevatorUp.png',
		#D1740080
	),
	elevator_down: (
		'elevator_texture_down',
		'./../img/textures/elevatorDown.png',
		#D1740080
	),
<<<<<<< HEAD
);

=======
	speedboost: (
		'speedboost_texture',
		'./../img/textures/speed.png',
		#4bb6f5
	),
	shrinker: (
		'shrinker_texture',
		'./../img/textures/shrink.png',
		#ba68c8
	)
);

:export {
	textures: first($textures);//hack for exporting list of lists
}

>>>>>>> origin/stage3
svg.game-svg {
	shape-rendering: auto;

	.cartoon-style {
		stroke: #000;
		stroke-width: 2px;
		stroke-opacity: 0.61;
<<<<<<< HEAD
>>>>>>> stage3
=======
>>>>>>> origin/stage3
	}

	.flat-shadows {
		filter: url(#flat-shadow);
	}

	image.nearest {
		image-rendering: pixelated;
<<<<<<< HEAD
	}
<<<<<<< HEAD
}
=======
=======
		shape-rendering: optimizeSpeed;
	}
	image:not(.nearest) {
		image-rendering: optimizeSpeed;
		shape-rendering: optimizeSpeed;
	}
>>>>>>> origin/stage3

	& > * {
		pointer-events: none;
	}

	/** predefined objects classes (correlated with themes object in predefined_assets.js) */

	circle, rect, path {
		//default values
		fill: #fff;

		@each $name, $color in $solid_colors {
			&.#{$name} {
				fill: $color;
			}
		}
	}

	&:not(.no-textures) circle, &:not(.no-textures) rect, &:not(.no-textures) path {
		@each $name, $data in $textures {
			&.#{$name} {
				fill: url(##{ nth($data, 1) });
			}
		}

<<<<<<< HEAD
		&.player {
			fill: url('#player_texture');
		}
=======
		/*&.player {
			fill: url('#player_texture');
		}*/
>>>>>>> origin/stage3
	}

	&.no-textures circle, &.no-textures rect, &.no-textures path {
		@each $name, $data in $textures {
			&.#{$name} {
				fill: nth($data, 3);
			}
		}

<<<<<<< HEAD
		&.player {
			fill: #749de2;
		}
=======
		/*&.player {
			fill: #749de2;
		}*/
>>>>>>> origin/stage3
	}

	.selected {
		stroke: #ef5350;
		stroke-opacity: 1;
<<<<<<< HEAD
		stroke-width: 4px;
		stroke-linecap: round;
		stroke-dasharray: 10;

		animation: stroke-rotate 2s linear infinite both;
=======
		stroke-width: 3px;
		stroke-linecap: round;
		stroke-dasharray: 10;
		vector-effect: non-scaling-stroke;

		animation: stroke-rotate 2s linear infinite;
>>>>>>> origin/stage3

		@keyframes stroke-rotate {
			0% {
				stroke-dashoffset: 0;
			}
			100% {
				stroke-dashoffset: 100;
			}
		}
	}

	.elevator.up {
		fill: url('#elevator_texture_up');
	}

	.elevator.down {
		fill: url('#elevator_texture_down');
	}

}


<<<<<<< HEAD
.asset_preview {
=======
.asset_preview, .powerups {
>>>>>>> origin/stage3
	& > * {
		box-sizing: border-box;
		border: 1px solid #000a;
	}

	@each $name, $color in $solid_colors {
		.#{$name} {
			background-color: $color;
		}
	}

	@each $name, $data in $textures {
		.#{$name} {
			background-image: url(#{ nth($data, 2) });
			background-size: contain;
		}
	}
}
<<<<<<< HEAD
>>>>>>> stage3
=======
>>>>>>> origin/stage3
